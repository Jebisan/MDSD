/*
 * generated by Xtext 2.16.0
 */
grammar InternalPycom;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package xtext.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package xtext.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import xtext.services.PycomGrammarAccess;

}
@parser::members {
	private PycomGrammarAccess grammarAccess;

	public void setGrammarAccess(PycomGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleSystem
entryRuleSystem
:
{ before(grammarAccess.getSystemRule()); }
	 ruleSystem
{ after(grammarAccess.getSystemRule()); } 
	 EOF 
;

// Rule System
ruleSystem 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSystemAccess().getGroup()); }
		(rule__System__Group__0)
		{ after(grammarAccess.getSystemAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLibrary
entryRuleLibrary
:
{ before(grammarAccess.getLibraryRule()); }
	 ruleLibrary
{ after(grammarAccess.getLibraryRule()); } 
	 EOF 
;

// Rule Library
ruleLibrary 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLibraryAccess().getGroup()); }
		(rule__Library__Group__0)
		{ after(grammarAccess.getLibraryAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleImport
entryRuleImport
:
{ before(grammarAccess.getImportRule()); }
	 ruleImport
{ after(grammarAccess.getImportRule()); } 
	 EOF 
;

// Rule Import
ruleImport 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getImportAccess().getGroup()); }
		(rule__Import__Group__0)
		{ after(grammarAccess.getImportAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleParameterType
entryRuleParameterType
:
{ before(grammarAccess.getParameterTypeRule()); }
	 ruleParameterType
{ after(grammarAccess.getParameterTypeRule()); } 
	 EOF 
;

// Rule ParameterType
ruleParameterType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getParameterTypeAccess().getAlternatives()); }
		(rule__ParameterType__Alternatives)
		{ after(grammarAccess.getParameterTypeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleServer
entryRuleServer
:
{ before(grammarAccess.getServerRule()); }
	 ruleServer
{ after(grammarAccess.getServerRule()); } 
	 EOF 
;

// Rule Server
ruleServer 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getServerAccess().getGroup()); }
		(rule__Server__Group__0)
		{ after(grammarAccess.getServerAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleConnection
entryRuleConnection
:
{ before(grammarAccess.getConnectionRule()); }
	 ruleConnection
{ after(grammarAccess.getConnectionRule()); } 
	 EOF 
;

// Rule Connection
ruleConnection 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConnectionAccess().getGroup()); }
		(rule__Connection__Group__0)
		{ after(grammarAccess.getConnectionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleHost
entryRuleHost
:
{ before(grammarAccess.getHostRule()); }
	 ruleHost
{ after(grammarAccess.getHostRule()); } 
	 EOF 
;

// Rule Host
ruleHost 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getHostAccess().getAlternatives()); }
		(rule__Host__Alternatives)
		{ after(grammarAccess.getHostAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleIpaddress
entryRuleIpaddress
:
{ before(grammarAccess.getIpaddressRule()); }
	 ruleIpaddress
{ after(grammarAccess.getIpaddressRule()); } 
	 EOF 
;

// Rule Ipaddress
ruleIpaddress 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIpaddressAccess().getGroup()); }
		(rule__Ipaddress__Group__0)
		{ after(grammarAccess.getIpaddressAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBoard
entryRuleBoard
:
{ before(grammarAccess.getBoardRule()); }
	 ruleBoard
{ after(grammarAccess.getBoardRule()); } 
	 EOF 
;

// Rule Board
ruleBoard 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBoardAccess().getGroup()); }
		(rule__Board__Group__0)
		{ after(grammarAccess.getBoardAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBoardMember
entryRuleBoardMember
:
{ before(grammarAccess.getBoardMemberRule()); }
	 ruleBoardMember
{ after(grammarAccess.getBoardMemberRule()); } 
	 EOF 
;

// Rule BoardMember
ruleBoardMember 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBoardMemberAccess().getAlternatives()); }
		(rule__BoardMember__Alternatives)
		{ after(grammarAccess.getBoardMemberAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleConditionalAction
entryRuleConditionalAction
:
{ before(grammarAccess.getConditionalActionRule()); }
	 ruleConditionalAction
{ after(grammarAccess.getConditionalActionRule()); } 
	 EOF 
;

// Rule ConditionalAction
ruleConditionalAction 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConditionalActionAccess().getGroup()); }
		(rule__ConditionalAction__Group__0)
		{ after(grammarAccess.getConditionalActionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExpMember
entryRuleExpMember
:
{ before(grammarAccess.getExpMemberRule()); }
	 ruleExpMember
{ after(grammarAccess.getExpMemberRule()); } 
	 EOF 
;

// Rule ExpMember
ruleExpMember 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExpMemberAccess().getAlternatives()); }
		(rule__ExpMember__Alternatives)
		{ after(grammarAccess.getExpMemberAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSensor
entryRuleSensor
:
{ before(grammarAccess.getSensorRule()); }
	 ruleSensor
{ after(grammarAccess.getSensorRule()); } 
	 EOF 
;

// Rule Sensor
ruleSensor 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSensorAccess().getGroup()); }
		(rule__Sensor__Group__0)
		{ after(grammarAccess.getSensorAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleActuator
entryRuleActuator
:
{ before(grammarAccess.getActuatorRule()); }
	 ruleActuator
{ after(grammarAccess.getActuatorRule()); } 
	 EOF 
;

// Rule Actuator
ruleActuator 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getActuatorAccess().getGroup()); }
		(rule__Actuator__Group__0)
		{ after(grammarAccess.getActuatorAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleModuleType
entryRuleModuleType
:
{ before(grammarAccess.getModuleTypeRule()); }
	 ruleModuleType
{ after(grammarAccess.getModuleTypeRule()); } 
	 EOF 
;

// Rule ModuleType
ruleModuleType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getModuleTypeAccess().getNameAssignment()); }
		(rule__ModuleType__NameAssignment)
		{ after(grammarAccess.getModuleTypeAccess().getNameAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleModuleName
entryRuleModuleName
:
{ before(grammarAccess.getModuleNameRule()); }
	 ruleModuleName
{ after(grammarAccess.getModuleNameRule()); } 
	 EOF 
;

// Rule ModuleName
ruleModuleName 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getModuleNameAccess().getNameAssignment()); }
		(rule__ModuleName__NameAssignment)
		{ after(grammarAccess.getModuleNameAccess().getNameAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCommunication
entryRuleCommunication
:
{ before(grammarAccess.getCommunicationRule()); }
	 ruleCommunication
{ after(grammarAccess.getCommunicationRule()); } 
	 EOF 
;

// Rule Communication
ruleCommunication 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCommunicationAccess().getGroup()); }
		(rule__Communication__Group__0)
		{ after(grammarAccess.getCommunicationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCommunicationType
entryRuleCommunicationType
:
{ before(grammarAccess.getCommunicationTypeRule()); }
	 ruleCommunicationType
{ after(grammarAccess.getCommunicationTypeRule()); } 
	 EOF 
;

// Rule CommunicationType
ruleCommunicationType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCommunicationTypeAccess().getAlternatives()); }
		(rule__CommunicationType__Alternatives)
		{ after(grammarAccess.getCommunicationTypeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePin
entryRulePin
:
{ before(grammarAccess.getPinRule()); }
	 rulePin
{ after(grammarAccess.getPinRule()); } 
	 EOF 
;

// Rule Pin
rulePin 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPinAccess().getGroup()); }
		(rule__Pin__Group__0)
		{ after(grammarAccess.getPinAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePinName
entryRulePinName
:
{ before(grammarAccess.getPinNameRule()); }
	 rulePinName
{ after(grammarAccess.getPinNameRule()); } 
	 EOF 
;

// Rule PinName
rulePinName 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPinNameAccess().getNameAssignment()); }
		(rule__PinName__NameAssignment)
		{ after(grammarAccess.getPinNameAccess().getNameAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCondition
entryRuleCondition
:
{ before(grammarAccess.getConditionRule()); }
	 ruleCondition
{ after(grammarAccess.getConditionRule()); } 
	 EOF 
;

// Rule Condition
ruleCondition 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConditionAccess().getAlternatives()); }
		(rule__Condition__Alternatives)
		{ after(grammarAccess.getConditionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLogicExp
entryRuleLogicExp
:
{ before(grammarAccess.getLogicExpRule()); }
	 ruleLogicExp
{ after(grammarAccess.getLogicExpRule()); } 
	 EOF 
;

// Rule LogicExp
ruleLogicExp 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLogicExpAccess().getAlternatives()); }
		(rule__LogicExp__Alternatives)
		{ after(grammarAccess.getLogicExpAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBoolean
entryRuleBoolean
:
{ before(grammarAccess.getBooleanRule()); }
	 ruleBoolean
{ after(grammarAccess.getBooleanRule()); } 
	 EOF 
;

// Rule Boolean
ruleBoolean 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBooleanAccess().getAlternatives()); }
		(rule__Boolean__Alternatives)
		{ after(grammarAccess.getBooleanAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleComparisonExp
entryRuleComparisonExp
:
{ before(grammarAccess.getComparisonExpRule()); }
	 ruleComparisonExp
{ after(grammarAccess.getComparisonExpRule()); } 
	 EOF 
;

// Rule ComparisonExp
ruleComparisonExp 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getComparisonExpAccess().getGroup()); }
		(rule__ComparisonExp__Group__0)
		{ after(grammarAccess.getComparisonExpAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExpression
entryRuleExpression
:
{ before(grammarAccess.getExpressionRule()); }
	 ruleExpression
{ after(grammarAccess.getExpressionRule()); } 
	 EOF 
;

// Rule Expression
ruleExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExpressionAccess().getAlternatives()); }
		(rule__Expression__Alternatives)
		{ after(grammarAccess.getExpressionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOperator
entryRuleOperator
:
{ before(grammarAccess.getOperatorRule()); }
	 ruleOperator
{ after(grammarAccess.getOperatorRule()); } 
	 EOF 
;

// Rule Operator
ruleOperator 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOperatorAccess().getAlternatives()); }
		(rule__Operator__Alternatives)
		{ after(grammarAccess.getOperatorAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFunction
entryRuleFunction
:
{ before(grammarAccess.getFunctionRule()); }
	 ruleFunction
{ after(grammarAccess.getFunctionRule()); } 
	 EOF 
;

// Rule Function
ruleFunction 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFunctionAccess().getGroup()); }
		(rule__Function__Group__0)
		{ after(grammarAccess.getFunctionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterType__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParameterTypeAccess().getNumberAssignment_0()); }
		(rule__ParameterType__NumberAssignment_0)
		{ after(grammarAccess.getParameterTypeAccess().getNumberAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getParameterTypeAccess().getTextAssignment_1()); }
		(rule__ParameterType__TextAssignment_1)
		{ after(grammarAccess.getParameterTypeAccess().getTextAssignment_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Host__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getHostAccess().getIpAdrAssignment_0()); }
		(rule__Host__IpAdrAssignment_0)
		{ after(grammarAccess.getHostAccess().getIpAdrAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getHostAccess().getWebsiteAssignment_1()); }
		(rule__Host__WebsiteAssignment_1)
		{ after(grammarAccess.getHostAccess().getWebsiteAssignment_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BoardMember__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBoardMemberAccess().getBoardMemberAssignment_0()); }
		(rule__BoardMember__BoardMemberAssignment_0)
		{ after(grammarAccess.getBoardMemberAccess().getBoardMemberAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getBoardMemberAccess().getActuatorParserRuleCall_1()); }
		ruleActuator
		{ after(grammarAccess.getBoardMemberAccess().getActuatorParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getBoardMemberAccess().getCommunicationParserRuleCall_2()); }
		ruleCommunication
		{ after(grammarAccess.getBoardMemberAccess().getCommunicationParserRuleCall_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpMember__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpMemberAccess().getFunctionParserRuleCall_0()); }
		ruleFunction
		{ after(grammarAccess.getExpMemberAccess().getFunctionParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getExpMemberAccess().getConditionalActionParserRuleCall_1()); }
		ruleConditionalAction
		{ after(grammarAccess.getExpMemberAccess().getConditionalActionParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CommunicationType__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCommunicationTypeAccess().getGroup_0()); }
		(rule__CommunicationType__Group_0__0)
		{ after(grammarAccess.getCommunicationTypeAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getCommunicationTypeAccess().getNameAssignment_1()); }
		(rule__CommunicationType__NameAssignment_1)
		{ after(grammarAccess.getCommunicationTypeAccess().getNameAssignment_1()); }
	)
	|
	(
		{ before(grammarAccess.getCommunicationTypeAccess().getNameAssignment_2()); }
		(rule__CommunicationType__NameAssignment_2)
		{ after(grammarAccess.getCommunicationTypeAccess().getNameAssignment_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConditionAccess().getLogicExAssignment_0()); }
		(rule__Condition__LogicExAssignment_0)
		{ after(grammarAccess.getConditionAccess().getLogicExAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getConditionAccess().getGroup_1()); }
		(rule__Condition__Group_1__0)
		{ after(grammarAccess.getConditionAccess().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getConditionAccess().getGroup_2()); }
		(rule__Condition__Group_2__0)
		{ after(grammarAccess.getConditionAccess().getGroup_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicExp__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLogicExpAccess().getBoolValAssignment_0()); }
		(rule__LogicExp__BoolValAssignment_0)
		{ after(grammarAccess.getLogicExpAccess().getBoolValAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getLogicExpAccess().getCompExpAssignment_1()); }
		(rule__LogicExp__CompExpAssignment_1)
		{ after(grammarAccess.getLogicExpAccess().getCompExpAssignment_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Boolean__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBooleanAccess().getValueAssignment_0()); }
		(rule__Boolean__ValueAssignment_0)
		{ after(grammarAccess.getBooleanAccess().getValueAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getBooleanAccess().getValueAssignment_1()); }
		(rule__Boolean__ValueAssignment_1)
		{ after(grammarAccess.getBooleanAccess().getValueAssignment_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionAccess().getOutputValueAssignment_0()); }
		(rule__Expression__OutputValueAssignment_0)
		{ after(grammarAccess.getExpressionAccess().getOutputValueAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getExpressionAccess().getOutputfunctionAssignment_1()); }
		(rule__Expression__OutputfunctionAssignment_1)
		{ after(grammarAccess.getExpressionAccess().getOutputfunctionAssignment_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Operator__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOperatorAccess().getLessThanSignKeyword_0()); }
		'<'
		{ after(grammarAccess.getOperatorAccess().getLessThanSignKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getOperatorAccess().getLessThanSignEqualsSignKeyword_1()); }
		'<='
		{ after(grammarAccess.getOperatorAccess().getLessThanSignEqualsSignKeyword_1()); }
	)
	|
	(
		{ before(grammarAccess.getOperatorAccess().getEqualsSignEqualsSignKeyword_2()); }
		'=='
		{ after(grammarAccess.getOperatorAccess().getEqualsSignEqualsSignKeyword_2()); }
	)
	|
	(
		{ before(grammarAccess.getOperatorAccess().getGreaterThanSignEqualsSignKeyword_3()); }
		'>='
		{ after(grammarAccess.getOperatorAccess().getGreaterThanSignEqualsSignKeyword_3()); }
	)
	|
	(
		{ before(grammarAccess.getOperatorAccess().getGreaterThanSignKeyword_4()); }
		'>'
		{ after(grammarAccess.getOperatorAccess().getGreaterThanSignKeyword_4()); }
	)
	|
	(
		{ before(grammarAccess.getOperatorAccess().getExclamationMarkEqualsSignKeyword_5()); }
		'!='
		{ after(grammarAccess.getOperatorAccess().getExclamationMarkEqualsSignKeyword_5()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__System__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__System__Group__0__Impl
	rule__System__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__System__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSystemAccess().getLibrariesAssignment_0()); }
	(rule__System__LibrariesAssignment_0)*
	{ after(grammarAccess.getSystemAccess().getLibrariesAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__System__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__System__Group__1__Impl
	rule__System__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__System__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSystemAccess().getImportsAssignment_1()); }
	(rule__System__ImportsAssignment_1)*
	{ after(grammarAccess.getSystemAccess().getImportsAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__System__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__System__Group__2__Impl
	rule__System__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__System__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSystemAccess().getBoardsAssignment_2()); }
	(rule__System__BoardsAssignment_2)*
	{ after(grammarAccess.getSystemAccess().getBoardsAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__System__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__System__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__System__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSystemAccess().getServersAssignment_3()); }
	(rule__System__ServersAssignment_3)*
	{ after(grammarAccess.getSystemAccess().getServersAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Library__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Library__Group__0__Impl
	rule__Library__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Library__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLibraryAccess().getLibraryKeyword_0()); }
	'Library'
	{ after(grammarAccess.getLibraryAccess().getLibraryKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Library__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Library__Group__1__Impl
	rule__Library__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Library__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLibraryAccess().getNameAssignment_1()); }
	(rule__Library__NameAssignment_1)
	{ after(grammarAccess.getLibraryAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Library__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Library__Group__2__Impl
	rule__Library__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Library__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLibraryAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getLibraryAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Library__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Library__Group__3__Impl
	rule__Library__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Library__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLibraryAccess().getImportsAssignment_3()); }
	(rule__Library__ImportsAssignment_3)*
	{ after(grammarAccess.getLibraryAccess().getImportsAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Library__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Library__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Library__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLibraryAccess().getRightCurlyBracketKeyword_4()); }
	'}'
	{ after(grammarAccess.getLibraryAccess().getRightCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Import__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Import__Group__0__Impl
	rule__Import__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportAccess().getImportKeyword_0()); }
	'import'
	{ after(grammarAccess.getImportAccess().getImportKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Import__Group__1__Impl
	rule__Import__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportAccess().getNameAssignment_1()); }
	(rule__Import__NameAssignment_1)
	{ after(grammarAccess.getImportAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Import__Group__2__Impl
	rule__Import__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportAccess().getLeftParenthesisKeyword_2()); }
	'('
	{ after(grammarAccess.getImportAccess().getLeftParenthesisKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Import__Group__3__Impl
	rule__Import__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportAccess().getParameterAssignment_3()); }
	(rule__Import__ParameterAssignment_3)?
	{ after(grammarAccess.getImportAccess().getParameterAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Import__Group__4__Impl
	rule__Import__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportAccess().getGroup_4()); }
	(rule__Import__Group_4__0)*
	{ after(grammarAccess.getImportAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Import__Group__5__Impl
	rule__Import__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportAccess().getRightParenthesisKeyword_5()); }
	')'
	{ after(grammarAccess.getImportAccess().getRightParenthesisKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Import__Group__6__Impl
	rule__Import__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportAccess().getFromKeyword_6()); }
	'from'
	{ after(grammarAccess.getImportAccess().getFromKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Import__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportAccess().getPathAssignment_7()); }
	(rule__Import__PathAssignment_7)
	{ after(grammarAccess.getImportAccess().getPathAssignment_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Import__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Import__Group_4__0__Impl
	rule__Import__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportAccess().getCommaKeyword_4_0()); }
	','
	{ after(grammarAccess.getImportAccess().getCommaKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Import__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportAccess().getParameterAssignment_4_1()); }
	(rule__Import__ParameterAssignment_4_1)
	{ after(grammarAccess.getImportAccess().getParameterAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Server__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Server__Group__0__Impl
	rule__Server__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Server__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getServerAccess().getServerKeyword_0()); }
	'Server'
	{ after(grammarAccess.getServerAccess().getServerKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Server__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Server__Group__1__Impl
	rule__Server__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Server__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getServerAccess().getNameAssignment_1()); }
	(rule__Server__NameAssignment_1)
	{ after(grammarAccess.getServerAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Server__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Server__Group__2__Impl
	rule__Server__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Server__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getServerAccess().getLeftParenthesisKeyword_2()); }
	'('
	{ after(grammarAccess.getServerAccess().getLeftParenthesisKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Server__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Server__Group__3__Impl
	rule__Server__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Server__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getServerAccess().getConnAssignment_3()); }
	(rule__Server__ConnAssignment_3)
	{ after(grammarAccess.getServerAccess().getConnAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Server__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Server__Group__4__Impl
	rule__Server__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Server__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getServerAccess().getRightParenthesisKeyword_4()); }
	')'
	{ after(grammarAccess.getServerAccess().getRightParenthesisKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Server__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Server__Group__5__Impl
	rule__Server__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Server__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getServerAccess().getLeftCurlyBracketKeyword_5()); }
	'{'
	{ after(grammarAccess.getServerAccess().getLeftCurlyBracketKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Server__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Server__Group__6__Impl
	rule__Server__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Server__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getServerAccess().getExpsAssignment_6()); }
	(rule__Server__ExpsAssignment_6)*
	{ after(grammarAccess.getServerAccess().getExpsAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Server__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Server__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Server__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getServerAccess().getRightCurlyBracketKeyword_7()); }
	'}'
	{ after(grammarAccess.getServerAccess().getRightCurlyBracketKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Connection__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Connection__Group__0__Impl
	rule__Connection__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Connection__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConnectionAccess().getHostAssignment_0()); }
	(rule__Connection__HostAssignment_0)
	{ after(grammarAccess.getConnectionAccess().getHostAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Connection__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Connection__Group__1__Impl
	rule__Connection__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Connection__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConnectionAccess().getCommaKeyword_1()); }
	','
	{ after(grammarAccess.getConnectionAccess().getCommaKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Connection__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Connection__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Connection__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConnectionAccess().getPortnumberAssignment_2()); }
	(rule__Connection__PortnumberAssignment_2)
	{ after(grammarAccess.getConnectionAccess().getPortnumberAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Ipaddress__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Ipaddress__Group__0__Impl
	rule__Ipaddress__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Ipaddress__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIpaddressAccess().getINTTerminalRuleCall_0()); }
	RULE_INT
	{ after(grammarAccess.getIpaddressAccess().getINTTerminalRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Ipaddress__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Ipaddress__Group__1__Impl
	rule__Ipaddress__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Ipaddress__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIpaddressAccess().getFullStopKeyword_1()); }
	'.'
	{ after(grammarAccess.getIpaddressAccess().getFullStopKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Ipaddress__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Ipaddress__Group__2__Impl
	rule__Ipaddress__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Ipaddress__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIpaddressAccess().getINTTerminalRuleCall_2()); }
	RULE_INT
	{ after(grammarAccess.getIpaddressAccess().getINTTerminalRuleCall_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Ipaddress__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Ipaddress__Group__3__Impl
	rule__Ipaddress__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Ipaddress__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIpaddressAccess().getFullStopKeyword_3()); }
	'.'
	{ after(grammarAccess.getIpaddressAccess().getFullStopKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Ipaddress__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Ipaddress__Group__4__Impl
	rule__Ipaddress__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Ipaddress__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIpaddressAccess().getINTTerminalRuleCall_4()); }
	RULE_INT
	{ after(grammarAccess.getIpaddressAccess().getINTTerminalRuleCall_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Ipaddress__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Ipaddress__Group__5__Impl
	rule__Ipaddress__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Ipaddress__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIpaddressAccess().getFullStopKeyword_5()); }
	'.'
	{ after(grammarAccess.getIpaddressAccess().getFullStopKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Ipaddress__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Ipaddress__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Ipaddress__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIpaddressAccess().getINTTerminalRuleCall_6()); }
	RULE_INT
	{ after(grammarAccess.getIpaddressAccess().getINTTerminalRuleCall_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Board__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Board__Group__0__Impl
	rule__Board__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Board__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBoardAccess().getBoardKeyword_0()); }
	'Board'
	{ after(grammarAccess.getBoardAccess().getBoardKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Board__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Board__Group__1__Impl
	rule__Board__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Board__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBoardAccess().getNameAssignment_1()); }
	(rule__Board__NameAssignment_1)
	{ after(grammarAccess.getBoardAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Board__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Board__Group__2__Impl
	rule__Board__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Board__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBoardAccess().getLeftParenthesisKeyword_2()); }
	'('
	{ after(grammarAccess.getBoardAccess().getLeftParenthesisKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Board__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Board__Group__3__Impl
	rule__Board__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Board__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBoardAccess().getBoardTypeAssignment_3()); }
	(rule__Board__BoardTypeAssignment_3)
	{ after(grammarAccess.getBoardAccess().getBoardTypeAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Board__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Board__Group__4__Impl
	rule__Board__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Board__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBoardAccess().getCommaKeyword_4()); }
	','
	{ after(grammarAccess.getBoardAccess().getCommaKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Board__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Board__Group__5__Impl
	rule__Board__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Board__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBoardAccess().getCommunicationRateAssignment_5()); }
	(rule__Board__CommunicationRateAssignment_5)
	{ after(grammarAccess.getBoardAccess().getCommunicationRateAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Board__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Board__Group__6__Impl
	rule__Board__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Board__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBoardAccess().getRightParenthesisKeyword_6()); }
	')'
	{ after(grammarAccess.getBoardAccess().getRightParenthesisKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Board__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Board__Group__7__Impl
	rule__Board__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Board__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBoardAccess().getGroup_7()); }
	(rule__Board__Group_7__0)?
	{ after(grammarAccess.getBoardAccess().getGroup_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Board__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Board__Group__8__Impl
	rule__Board__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__Board__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBoardAccess().getLeftCurlyBracketKeyword_8()); }
	'{'
	{ after(grammarAccess.getBoardAccess().getLeftCurlyBracketKeyword_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Board__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Board__Group__9__Impl
	rule__Board__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__Board__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBoardAccess().getBoardMembersAssignment_9()); }
	(rule__Board__BoardMembersAssignment_9)*
	{ after(grammarAccess.getBoardAccess().getBoardMembersAssignment_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Board__Group__10
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Board__Group__10__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Board__Group__10__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBoardAccess().getRightCurlyBracketKeyword_10()); }
	'}'
	{ after(grammarAccess.getBoardAccess().getRightCurlyBracketKeyword_10()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Board__Group_7__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Board__Group_7__0__Impl
	rule__Board__Group_7__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Board__Group_7__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBoardAccess().getUsesKeyword_7_0()); }
	'uses'
	{ after(grammarAccess.getBoardAccess().getUsesKeyword_7_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Board__Group_7__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Board__Group_7__1__Impl
	rule__Board__Group_7__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Board__Group_7__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBoardAccess().getLibraryAssignment_7_1()); }
	(rule__Board__LibraryAssignment_7_1)?
	{ after(grammarAccess.getBoardAccess().getLibraryAssignment_7_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Board__Group_7__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Board__Group_7__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Board__Group_7__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBoardAccess().getGroup_7_2()); }
	(rule__Board__Group_7_2__0)*
	{ after(grammarAccess.getBoardAccess().getGroup_7_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Board__Group_7_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Board__Group_7_2__0__Impl
	rule__Board__Group_7_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Board__Group_7_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBoardAccess().getCommaKeyword_7_2_0()); }
	','
	{ after(grammarAccess.getBoardAccess().getCommaKeyword_7_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Board__Group_7_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Board__Group_7_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Board__Group_7_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBoardAccess().getLibraryAssignment_7_2_1()); }
	(rule__Board__LibraryAssignment_7_2_1)
	{ after(grammarAccess.getBoardAccess().getLibraryAssignment_7_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ConditionalAction__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConditionalAction__Group__0__Impl
	rule__ConditionalAction__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalAction__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionalActionAccess().getTypeAssignment_0()); }
	(rule__ConditionalAction__TypeAssignment_0)
	{ after(grammarAccess.getConditionalActionAccess().getTypeAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalAction__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConditionalAction__Group__1__Impl
	rule__ConditionalAction__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalAction__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionalActionAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getConditionalActionAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalAction__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConditionalAction__Group__2__Impl
	rule__ConditionalAction__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalAction__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionalActionAccess().getConditionAssignment_2()); }
	(rule__ConditionalAction__ConditionAssignment_2)
	{ after(grammarAccess.getConditionalActionAccess().getConditionAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalAction__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConditionalAction__Group__3__Impl
	rule__ConditionalAction__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalAction__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionalActionAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getConditionalActionAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalAction__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConditionalAction__Group__4__Impl
	rule__ConditionalAction__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalAction__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionalActionAccess().getLeftCurlyBracketKeyword_4()); }
	'{'
	{ after(grammarAccess.getConditionalActionAccess().getLeftCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalAction__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConditionalAction__Group__5__Impl
	rule__ConditionalAction__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalAction__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionalActionAccess().getExpMembersAssignment_5()); }
	(rule__ConditionalAction__ExpMembersAssignment_5)*
	{ after(grammarAccess.getConditionalActionAccess().getExpMembersAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalAction__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConditionalAction__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalAction__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionalActionAccess().getRightCurlyBracketKeyword_6()); }
	'}'
	{ after(grammarAccess.getConditionalActionAccess().getRightCurlyBracketKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Sensor__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Sensor__Group__0__Impl
	rule__Sensor__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Sensor__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSensorAccess().getSensorKeyword_0()); }
	'Sensor'
	{ after(grammarAccess.getSensorAccess().getSensorKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sensor__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Sensor__Group__1__Impl
	rule__Sensor__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Sensor__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSensorAccess().getTypeNameAssignment_1()); }
	(rule__Sensor__TypeNameAssignment_1)
	{ after(grammarAccess.getSensorAccess().getTypeNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sensor__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Sensor__Group__2__Impl
	rule__Sensor__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Sensor__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSensorAccess().getColonKeyword_2()); }
	':'
	{ after(grammarAccess.getSensorAccess().getColonKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sensor__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Sensor__Group__3__Impl
	rule__Sensor__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Sensor__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSensorAccess().getSensorNameAssignment_3()); }
	(rule__Sensor__SensorNameAssignment_3)
	{ after(grammarAccess.getSensorAccess().getSensorNameAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sensor__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Sensor__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Sensor__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSensorAccess().getGroup_4()); }
	(rule__Sensor__Group_4__0)?
	{ after(grammarAccess.getSensorAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Sensor__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Sensor__Group_4__0__Impl
	rule__Sensor__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Sensor__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSensorAccess().getLeftParenthesisKeyword_4_0()); }
	'('
	{ after(grammarAccess.getSensorAccess().getLeftParenthesisKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sensor__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Sensor__Group_4__1__Impl
	rule__Sensor__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Sensor__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSensorAccess().getPinsAssignment_4_1()); }
	(rule__Sensor__PinsAssignment_4_1)
	{ after(grammarAccess.getSensorAccess().getPinsAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sensor__Group_4__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Sensor__Group_4__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Sensor__Group_4__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSensorAccess().getRightParenthesisKeyword_4_2()); }
	')'
	{ after(grammarAccess.getSensorAccess().getRightParenthesisKeyword_4_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Actuator__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Actuator__Group__0__Impl
	rule__Actuator__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Actuator__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActuatorAccess().getActuatorKeyword_0()); }
	'Actuator'
	{ after(grammarAccess.getActuatorAccess().getActuatorKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Actuator__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Actuator__Group__1__Impl
	rule__Actuator__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Actuator__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActuatorAccess().getTypeNameAssignment_1()); }
	(rule__Actuator__TypeNameAssignment_1)
	{ after(grammarAccess.getActuatorAccess().getTypeNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Actuator__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Actuator__Group__2__Impl
	rule__Actuator__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Actuator__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActuatorAccess().getColonKeyword_2()); }
	':'
	{ after(grammarAccess.getActuatorAccess().getColonKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Actuator__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Actuator__Group__3__Impl
	rule__Actuator__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Actuator__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActuatorAccess().getActuatorNameAssignment_3()); }
	(rule__Actuator__ActuatorNameAssignment_3)
	{ after(grammarAccess.getActuatorAccess().getActuatorNameAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Actuator__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Actuator__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Actuator__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActuatorAccess().getGroup_4()); }
	(rule__Actuator__Group_4__0)?
	{ after(grammarAccess.getActuatorAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Actuator__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Actuator__Group_4__0__Impl
	rule__Actuator__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Actuator__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActuatorAccess().getLeftParenthesisKeyword_4_0()); }
	'('
	{ after(grammarAccess.getActuatorAccess().getLeftParenthesisKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Actuator__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Actuator__Group_4__1__Impl
	rule__Actuator__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Actuator__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActuatorAccess().getPinsAssignment_4_1()); }
	(rule__Actuator__PinsAssignment_4_1)
	{ after(grammarAccess.getActuatorAccess().getPinsAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Actuator__Group_4__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Actuator__Group_4__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Actuator__Group_4__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActuatorAccess().getRightParenthesisKeyword_4_2()); }
	')'
	{ after(grammarAccess.getActuatorAccess().getRightParenthesisKeyword_4_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Communication__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Communication__Group__0__Impl
	rule__Communication__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Communication__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCommunicationAccess().getCommunicationKeyword_0()); }
	'Communication'
	{ after(grammarAccess.getCommunicationAccess().getCommunicationKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Communication__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Communication__Group__1__Impl
	rule__Communication__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Communication__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCommunicationAccess().getColonKeyword_1()); }
	':'
	{ after(grammarAccess.getCommunicationAccess().getColonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Communication__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Communication__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Communication__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCommunicationAccess().getTypeAssignment_2()); }
	(rule__Communication__TypeAssignment_2)
	{ after(grammarAccess.getCommunicationAccess().getTypeAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CommunicationType__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CommunicationType__Group_0__0__Impl
	rule__CommunicationType__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CommunicationType__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCommunicationTypeAccess().getNameAssignment_0_0()); }
	(rule__CommunicationType__NameAssignment_0_0)
	{ after(grammarAccess.getCommunicationTypeAccess().getNameAssignment_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CommunicationType__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CommunicationType__Group_0__1__Impl
	rule__CommunicationType__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CommunicationType__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCommunicationTypeAccess().getLeftParenthesisKeyword_0_1()); }
	'('
	{ after(grammarAccess.getCommunicationTypeAccess().getLeftParenthesisKeyword_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CommunicationType__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CommunicationType__Group_0__2__Impl
	rule__CommunicationType__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__CommunicationType__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCommunicationTypeAccess().getSsidAssignment_0_2()); }
	(rule__CommunicationType__SsidAssignment_0_2)
	{ after(grammarAccess.getCommunicationTypeAccess().getSsidAssignment_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CommunicationType__Group_0__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CommunicationType__Group_0__3__Impl
	rule__CommunicationType__Group_0__4
;
finally {
	restoreStackSize(stackSize);
}

rule__CommunicationType__Group_0__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCommunicationTypeAccess().getCommaKeyword_0_3()); }
	','
	{ after(grammarAccess.getCommunicationTypeAccess().getCommaKeyword_0_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CommunicationType__Group_0__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CommunicationType__Group_0__4__Impl
	rule__CommunicationType__Group_0__5
;
finally {
	restoreStackSize(stackSize);
}

rule__CommunicationType__Group_0__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCommunicationTypeAccess().getPasswordAssignment_0_4()); }
	(rule__CommunicationType__PasswordAssignment_0_4)
	{ after(grammarAccess.getCommunicationTypeAccess().getPasswordAssignment_0_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CommunicationType__Group_0__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CommunicationType__Group_0__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CommunicationType__Group_0__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCommunicationTypeAccess().getRightParenthesisKeyword_0_5()); }
	')'
	{ after(grammarAccess.getCommunicationTypeAccess().getRightParenthesisKeyword_0_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Pin__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Pin__Group__0__Impl
	rule__Pin__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Pin__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPinAccess().getPowerAssignment_0()); }
	(rule__Pin__PowerAssignment_0)
	{ after(grammarAccess.getPinAccess().getPowerAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Pin__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Pin__Group__1__Impl
	rule__Pin__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Pin__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPinAccess().getCommaKeyword_1()); }
	','
	{ after(grammarAccess.getPinAccess().getCommaKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Pin__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Pin__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Pin__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPinAccess().getInputAssignment_2()); }
	(rule__Pin__InputAssignment_2)
	{ after(grammarAccess.getPinAccess().getInputAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Condition__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Condition__Group_1__0__Impl
	rule__Condition__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionAccess().getLogicExAssignment_1_0()); }
	(rule__Condition__LogicExAssignment_1_0)
	{ after(grammarAccess.getConditionAccess().getLogicExAssignment_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Condition__Group_1__1__Impl
	rule__Condition__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionAccess().getOperatorAssignment_1_1()); }
	(rule__Condition__OperatorAssignment_1_1)
	{ after(grammarAccess.getConditionAccess().getOperatorAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Condition__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionAccess().getNestedConditionAssignment_1_2()); }
	(rule__Condition__NestedConditionAssignment_1_2)
	{ after(grammarAccess.getConditionAccess().getNestedConditionAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Condition__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Condition__Group_2__0__Impl
	rule__Condition__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionAccess().getLogicExAssignment_2_0()); }
	(rule__Condition__LogicExAssignment_2_0)
	{ after(grammarAccess.getConditionAccess().getLogicExAssignment_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Condition__Group_2__1__Impl
	rule__Condition__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionAccess().getOperatorAssignment_2_1()); }
	(rule__Condition__OperatorAssignment_2_1)
	{ after(grammarAccess.getConditionAccess().getOperatorAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Condition__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionAccess().getNestedConditionAssignment_2_2()); }
	(rule__Condition__NestedConditionAssignment_2_2)
	{ after(grammarAccess.getConditionAccess().getNestedConditionAssignment_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ComparisonExp__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComparisonExp__Group__0__Impl
	rule__ComparisonExp__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonExp__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparisonExpAccess().getLeftAssignment_0()); }
	(rule__ComparisonExp__LeftAssignment_0)
	{ after(grammarAccess.getComparisonExpAccess().getLeftAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonExp__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComparisonExp__Group__1__Impl
	rule__ComparisonExp__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonExp__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparisonExpAccess().getOpAssignment_1()); }
	(rule__ComparisonExp__OpAssignment_1)
	{ after(grammarAccess.getComparisonExpAccess().getOpAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonExp__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComparisonExp__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonExp__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparisonExpAccess().getRightAssignment_2()); }
	(rule__ComparisonExp__RightAssignment_2)
	{ after(grammarAccess.getComparisonExpAccess().getRightAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Function__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Function__Group__0__Impl
	rule__Function__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionAccess().getBoardAssignment_0()); }
	(rule__Function__BoardAssignment_0)
	{ after(grammarAccess.getFunctionAccess().getBoardAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Function__Group__1__Impl
	rule__Function__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionAccess().getFullStopKeyword_1()); }
	'.'
	{ after(grammarAccess.getFunctionAccess().getFullStopKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Function__Group__2__Impl
	rule__Function__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionAccess().getFunctionNameAssignment_2()); }
	(rule__Function__FunctionNameAssignment_2)
	{ after(grammarAccess.getFunctionAccess().getFunctionNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Function__Group__3__Impl
	rule__Function__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionAccess().getLeftParenthesisKeyword_3()); }
	'('
	{ after(grammarAccess.getFunctionAccess().getLeftParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Function__Group__4__Impl
	rule__Function__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionAccess().getPinsAssignment_4()); }
	(rule__Function__PinsAssignment_4)?
	{ after(grammarAccess.getFunctionAccess().getPinsAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Function__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionAccess().getRightParenthesisKeyword_5()); }
	')'
	{ after(grammarAccess.getFunctionAccess().getRightParenthesisKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__System__LibrariesAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSystemAccess().getLibrariesLibraryParserRuleCall_0_0()); }
		ruleLibrary
		{ after(grammarAccess.getSystemAccess().getLibrariesLibraryParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__System__ImportsAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSystemAccess().getImportsImportParserRuleCall_1_0()); }
		ruleImport
		{ after(grammarAccess.getSystemAccess().getImportsImportParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__System__BoardsAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSystemAccess().getBoardsBoardParserRuleCall_2_0()); }
		ruleBoard
		{ after(grammarAccess.getSystemAccess().getBoardsBoardParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__System__ServersAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSystemAccess().getServersServerParserRuleCall_3_0()); }
		ruleServer
		{ after(grammarAccess.getSystemAccess().getServersServerParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Library__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLibraryAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getLibraryAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Library__ImportsAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLibraryAccess().getImportsImportParserRuleCall_3_0()); }
		ruleImport
		{ after(grammarAccess.getLibraryAccess().getImportsImportParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getImportAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getImportAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__ParameterAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getImportAccess().getParameterParameterTypeParserRuleCall_3_0()); }
		ruleParameterType
		{ after(grammarAccess.getImportAccess().getParameterParameterTypeParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__ParameterAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getImportAccess().getParameterParameterTypeParserRuleCall_4_1_0()); }
		ruleParameterType
		{ after(grammarAccess.getImportAccess().getParameterParameterTypeParserRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__PathAssignment_7
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getImportAccess().getPathSTRINGTerminalRuleCall_7_0()); }
		RULE_STRING
		{ after(grammarAccess.getImportAccess().getPathSTRINGTerminalRuleCall_7_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterType__NumberAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParameterTypeAccess().getNumberINTTerminalRuleCall_0_0()); }
		RULE_INT
		{ after(grammarAccess.getParameterTypeAccess().getNumberINTTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterType__TextAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParameterTypeAccess().getTextSTRINGTerminalRuleCall_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getParameterTypeAccess().getTextSTRINGTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Server__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getServerAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getServerAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Server__ConnAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getServerAccess().getConnConnectionParserRuleCall_3_0()); }
		ruleConnection
		{ after(grammarAccess.getServerAccess().getConnConnectionParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Server__ExpsAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getServerAccess().getExpsConditionalActionParserRuleCall_6_0()); }
		ruleConditionalAction
		{ after(grammarAccess.getServerAccess().getExpsConditionalActionParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Connection__HostAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConnectionAccess().getHostHostParserRuleCall_0_0()); }
		ruleHost
		{ after(grammarAccess.getConnectionAccess().getHostHostParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Connection__PortnumberAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConnectionAccess().getPortnumberINTTerminalRuleCall_2_0()); }
		RULE_INT
		{ after(grammarAccess.getConnectionAccess().getPortnumberINTTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Host__IpAdrAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getHostAccess().getIpAdrIpaddressParserRuleCall_0_0()); }
		ruleIpaddress
		{ after(grammarAccess.getHostAccess().getIpAdrIpaddressParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Host__WebsiteAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getHostAccess().getWebsiteSTRINGTerminalRuleCall_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getHostAccess().getWebsiteSTRINGTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Board__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBoardAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getBoardAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Board__BoardTypeAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBoardAccess().getBoardTypeIDTerminalRuleCall_3_0()); }
		RULE_ID
		{ after(grammarAccess.getBoardAccess().getBoardTypeIDTerminalRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Board__CommunicationRateAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBoardAccess().getCommunicationRateINTTerminalRuleCall_5_0()); }
		RULE_INT
		{ after(grammarAccess.getBoardAccess().getCommunicationRateINTTerminalRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Board__LibraryAssignment_7_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBoardAccess().getLibraryLibraryCrossReference_7_1_0()); }
		(
			{ before(grammarAccess.getBoardAccess().getLibraryLibraryIDTerminalRuleCall_7_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getBoardAccess().getLibraryLibraryIDTerminalRuleCall_7_1_0_1()); }
		)
		{ after(grammarAccess.getBoardAccess().getLibraryLibraryCrossReference_7_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Board__LibraryAssignment_7_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBoardAccess().getLibraryLibraryCrossReference_7_2_1_0()); }
		(
			{ before(grammarAccess.getBoardAccess().getLibraryLibraryIDTerminalRuleCall_7_2_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getBoardAccess().getLibraryLibraryIDTerminalRuleCall_7_2_1_0_1()); }
		)
		{ after(grammarAccess.getBoardAccess().getLibraryLibraryCrossReference_7_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Board__BoardMembersAssignment_9
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBoardAccess().getBoardMembersBoardMemberParserRuleCall_9_0()); }
		ruleBoardMember
		{ after(grammarAccess.getBoardAccess().getBoardMembersBoardMemberParserRuleCall_9_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BoardMember__BoardMemberAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBoardMemberAccess().getBoardMemberSensorParserRuleCall_0_0()); }
		ruleSensor
		{ after(grammarAccess.getBoardMemberAccess().getBoardMemberSensorParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalAction__TypeAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConditionalActionAccess().getTypeIfKeyword_0_0()); }
		(
			{ before(grammarAccess.getConditionalActionAccess().getTypeIfKeyword_0_0()); }
			'if'
			{ after(grammarAccess.getConditionalActionAccess().getTypeIfKeyword_0_0()); }
		)
		{ after(grammarAccess.getConditionalActionAccess().getTypeIfKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalAction__ConditionAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConditionalActionAccess().getConditionConditionParserRuleCall_2_0()); }
		ruleCondition
		{ after(grammarAccess.getConditionalActionAccess().getConditionConditionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalAction__ExpMembersAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConditionalActionAccess().getExpMembersExpMemberParserRuleCall_5_0()); }
		ruleExpMember
		{ after(grammarAccess.getConditionalActionAccess().getExpMembersExpMemberParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sensor__TypeNameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSensorAccess().getTypeNameModuleTypeParserRuleCall_1_0()); }
		ruleModuleType
		{ after(grammarAccess.getSensorAccess().getTypeNameModuleTypeParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sensor__SensorNameAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSensorAccess().getSensorNameModuleNameParserRuleCall_3_0()); }
		ruleModuleName
		{ after(grammarAccess.getSensorAccess().getSensorNameModuleNameParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sensor__PinsAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSensorAccess().getPinsPinParserRuleCall_4_1_0()); }
		rulePin
		{ after(grammarAccess.getSensorAccess().getPinsPinParserRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Actuator__TypeNameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getActuatorAccess().getTypeNameModuleTypeParserRuleCall_1_0()); }
		ruleModuleType
		{ after(grammarAccess.getActuatorAccess().getTypeNameModuleTypeParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Actuator__ActuatorNameAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getActuatorAccess().getActuatorNameModuleNameParserRuleCall_3_0()); }
		ruleModuleName
		{ after(grammarAccess.getActuatorAccess().getActuatorNameModuleNameParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Actuator__PinsAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getActuatorAccess().getPinsPinParserRuleCall_4_1_0()); }
		rulePin
		{ after(grammarAccess.getActuatorAccess().getPinsPinParserRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ModuleType__NameAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModuleTypeAccess().getNameIDTerminalRuleCall_0()); }
		RULE_ID
		{ after(grammarAccess.getModuleTypeAccess().getNameIDTerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ModuleName__NameAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModuleNameAccess().getNameIDTerminalRuleCall_0()); }
		RULE_ID
		{ after(grammarAccess.getModuleNameAccess().getNameIDTerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Communication__TypeAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCommunicationAccess().getTypeCommunicationTypeParserRuleCall_2_0()); }
		ruleCommunicationType
		{ after(grammarAccess.getCommunicationAccess().getTypeCommunicationTypeParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CommunicationType__NameAssignment_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCommunicationTypeAccess().getNameWiFiKeyword_0_0_0()); }
		(
			{ before(grammarAccess.getCommunicationTypeAccess().getNameWiFiKeyword_0_0_0()); }
			'WiFi'
			{ after(grammarAccess.getCommunicationTypeAccess().getNameWiFiKeyword_0_0_0()); }
		)
		{ after(grammarAccess.getCommunicationTypeAccess().getNameWiFiKeyword_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CommunicationType__SsidAssignment_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCommunicationTypeAccess().getSsidSTRINGTerminalRuleCall_0_2_0()); }
		RULE_STRING
		{ after(grammarAccess.getCommunicationTypeAccess().getSsidSTRINGTerminalRuleCall_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CommunicationType__PasswordAssignment_0_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCommunicationTypeAccess().getPasswordSTRINGTerminalRuleCall_0_4_0()); }
		RULE_STRING
		{ after(grammarAccess.getCommunicationTypeAccess().getPasswordSTRINGTerminalRuleCall_0_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CommunicationType__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCommunicationTypeAccess().getNameBluetoothKeyword_1_0()); }
		(
			{ before(grammarAccess.getCommunicationTypeAccess().getNameBluetoothKeyword_1_0()); }
			'Bluetooth'
			{ after(grammarAccess.getCommunicationTypeAccess().getNameBluetoothKeyword_1_0()); }
		)
		{ after(grammarAccess.getCommunicationTypeAccess().getNameBluetoothKeyword_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CommunicationType__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCommunicationTypeAccess().getNameSigFoxKeyword_2_0()); }
		(
			{ before(grammarAccess.getCommunicationTypeAccess().getNameSigFoxKeyword_2_0()); }
			'SigFox'
			{ after(grammarAccess.getCommunicationTypeAccess().getNameSigFoxKeyword_2_0()); }
		)
		{ after(grammarAccess.getCommunicationTypeAccess().getNameSigFoxKeyword_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Pin__PowerAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPinAccess().getPowerPinNameParserRuleCall_0_0()); }
		rulePinName
		{ after(grammarAccess.getPinAccess().getPowerPinNameParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Pin__InputAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPinAccess().getInputPinNameParserRuleCall_2_0()); }
		rulePinName
		{ after(grammarAccess.getPinAccess().getInputPinNameParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PinName__NameAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPinNameAccess().getNameSTRINGTerminalRuleCall_0()); }
		RULE_STRING
		{ after(grammarAccess.getPinNameAccess().getNameSTRINGTerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__LogicExAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConditionAccess().getLogicExLogicExpParserRuleCall_0_0()); }
		ruleLogicExp
		{ after(grammarAccess.getConditionAccess().getLogicExLogicExpParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__LogicExAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConditionAccess().getLogicExLogicExpParserRuleCall_1_0_0()); }
		ruleLogicExp
		{ after(grammarAccess.getConditionAccess().getLogicExLogicExpParserRuleCall_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__OperatorAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConditionAccess().getOperatorAmpersandAmpersandKeyword_1_1_0()); }
		(
			{ before(grammarAccess.getConditionAccess().getOperatorAmpersandAmpersandKeyword_1_1_0()); }
			'&&'
			{ after(grammarAccess.getConditionAccess().getOperatorAmpersandAmpersandKeyword_1_1_0()); }
		)
		{ after(grammarAccess.getConditionAccess().getOperatorAmpersandAmpersandKeyword_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__NestedConditionAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConditionAccess().getNestedConditionConditionParserRuleCall_1_2_0()); }
		ruleCondition
		{ after(grammarAccess.getConditionAccess().getNestedConditionConditionParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__LogicExAssignment_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConditionAccess().getLogicExLogicExpParserRuleCall_2_0_0()); }
		ruleLogicExp
		{ after(grammarAccess.getConditionAccess().getLogicExLogicExpParserRuleCall_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__OperatorAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConditionAccess().getOperatorVerticalLineVerticalLineKeyword_2_1_0()); }
		(
			{ before(grammarAccess.getConditionAccess().getOperatorVerticalLineVerticalLineKeyword_2_1_0()); }
			'||'
			{ after(grammarAccess.getConditionAccess().getOperatorVerticalLineVerticalLineKeyword_2_1_0()); }
		)
		{ after(grammarAccess.getConditionAccess().getOperatorVerticalLineVerticalLineKeyword_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__NestedConditionAssignment_2_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConditionAccess().getNestedConditionConditionParserRuleCall_2_2_0()); }
		ruleCondition
		{ after(grammarAccess.getConditionAccess().getNestedConditionConditionParserRuleCall_2_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicExp__BoolValAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLogicExpAccess().getBoolValBooleanParserRuleCall_0_0()); }
		ruleBoolean
		{ after(grammarAccess.getLogicExpAccess().getBoolValBooleanParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicExp__CompExpAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLogicExpAccess().getCompExpComparisonExpParserRuleCall_1_0()); }
		ruleComparisonExp
		{ after(grammarAccess.getLogicExpAccess().getCompExpComparisonExpParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Boolean__ValueAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBooleanAccess().getValueTrueKeyword_0_0()); }
		(
			{ before(grammarAccess.getBooleanAccess().getValueTrueKeyword_0_0()); }
			'true'
			{ after(grammarAccess.getBooleanAccess().getValueTrueKeyword_0_0()); }
		)
		{ after(grammarAccess.getBooleanAccess().getValueTrueKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Boolean__ValueAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBooleanAccess().getValueFalseKeyword_1_0()); }
		(
			{ before(grammarAccess.getBooleanAccess().getValueFalseKeyword_1_0()); }
			'false'
			{ after(grammarAccess.getBooleanAccess().getValueFalseKeyword_1_0()); }
		)
		{ after(grammarAccess.getBooleanAccess().getValueFalseKeyword_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonExp__LeftAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComparisonExpAccess().getLeftExpressionParserRuleCall_0_0()); }
		ruleExpression
		{ after(grammarAccess.getComparisonExpAccess().getLeftExpressionParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonExp__OpAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComparisonExpAccess().getOpOperatorParserRuleCall_1_0()); }
		ruleOperator
		{ after(grammarAccess.getComparisonExpAccess().getOpOperatorParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonExp__RightAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComparisonExpAccess().getRightExpressionParserRuleCall_2_0()); }
		ruleExpression
		{ after(grammarAccess.getComparisonExpAccess().getRightExpressionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__OutputValueAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionAccess().getOutputValueINTTerminalRuleCall_0_0()); }
		RULE_INT
		{ after(grammarAccess.getExpressionAccess().getOutputValueINTTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__OutputfunctionAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionAccess().getOutputfunctionFunctionParserRuleCall_1_0()); }
		ruleFunction
		{ after(grammarAccess.getExpressionAccess().getOutputfunctionFunctionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__BoardAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionAccess().getBoardBoardCrossReference_0_0()); }
		(
			{ before(grammarAccess.getFunctionAccess().getBoardBoardIDTerminalRuleCall_0_0_1()); }
			RULE_ID
			{ after(grammarAccess.getFunctionAccess().getBoardBoardIDTerminalRuleCall_0_0_1()); }
		)
		{ after(grammarAccess.getFunctionAccess().getBoardBoardCrossReference_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__FunctionNameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionAccess().getFunctionNameImportCrossReference_2_0()); }
		(
			{ before(grammarAccess.getFunctionAccess().getFunctionNameImportIDTerminalRuleCall_2_0_1()); }
			RULE_ID
			{ after(grammarAccess.getFunctionAccess().getFunctionNameImportIDTerminalRuleCall_2_0_1()); }
		)
		{ after(grammarAccess.getFunctionAccess().getFunctionNameImportCrossReference_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__PinsAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionAccess().getPinsPinParserRuleCall_4_0()); }
		rulePin
		{ after(grammarAccess.getFunctionAccess().getPinsPinParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
