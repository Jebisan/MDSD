/**
 * generated by Xtext 2.16.0
 */
package xtext.pycom.impl;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.EObjectResolvingEList;
import org.eclipse.emf.ecore.util.InternalEList;

import xtext.pycom.Board;
import xtext.pycom.BoardMember;
import xtext.pycom.Library;
import xtext.pycom.PycomPackage;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Board</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link xtext.pycom.impl.BoardImpl#getName <em>Name</em>}</li>
 *   <li>{@link xtext.pycom.impl.BoardImpl#getBoardType <em>Board Type</em>}</li>
 *   <li>{@link xtext.pycom.impl.BoardImpl#getCommunicationRate <em>Communication Rate</em>}</li>
 *   <li>{@link xtext.pycom.impl.BoardImpl#getLibrary <em>Library</em>}</li>
 *   <li>{@link xtext.pycom.impl.BoardImpl#getBoardMembers <em>Board Members</em>}</li>
 * </ul>
 *
 * @generated
 */
public class BoardImpl extends MinimalEObjectImpl.Container implements Board
{
  /**
   * The default value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected static final String NAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected String name = NAME_EDEFAULT;

  /**
   * The default value of the '{@link #getBoardType() <em>Board Type</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getBoardType()
   * @generated
   * @ordered
   */
  protected static final String BOARD_TYPE_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getBoardType() <em>Board Type</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getBoardType()
   * @generated
   * @ordered
   */
  protected String boardType = BOARD_TYPE_EDEFAULT;

  /**
   * The default value of the '{@link #getCommunicationRate() <em>Communication Rate</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getCommunicationRate()
   * @generated
   * @ordered
   */
  protected static final int COMMUNICATION_RATE_EDEFAULT = 0;

  /**
   * The cached value of the '{@link #getCommunicationRate() <em>Communication Rate</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getCommunicationRate()
   * @generated
   * @ordered
   */
  protected int communicationRate = COMMUNICATION_RATE_EDEFAULT;

  /**
   * The cached value of the '{@link #getLibrary() <em>Library</em>}' reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getLibrary()
   * @generated
   * @ordered
   */
  protected EList<Library> library;

  /**
   * The cached value of the '{@link #getBoardMembers() <em>Board Members</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getBoardMembers()
   * @generated
   * @ordered
   */
  protected EList<BoardMember> boardMembers;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected BoardImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return PycomPackage.Literals.BOARD;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getName()
  {
    return name;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setName(String newName)
  {
    String oldName = name;
    name = newName;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, PycomPackage.BOARD__NAME, oldName, name));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getBoardType()
  {
    return boardType;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setBoardType(String newBoardType)
  {
    String oldBoardType = boardType;
    boardType = newBoardType;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, PycomPackage.BOARD__BOARD_TYPE, oldBoardType, boardType));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public int getCommunicationRate()
  {
    return communicationRate;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setCommunicationRate(int newCommunicationRate)
  {
    int oldCommunicationRate = communicationRate;
    communicationRate = newCommunicationRate;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, PycomPackage.BOARD__COMMUNICATION_RATE, oldCommunicationRate, communicationRate));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<Library> getLibrary()
  {
    if (library == null)
    {
      library = new EObjectResolvingEList<Library>(Library.class, this, PycomPackage.BOARD__LIBRARY);
    }
    return library;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<BoardMember> getBoardMembers()
  {
    if (boardMembers == null)
    {
      boardMembers = new EObjectContainmentEList<BoardMember>(BoardMember.class, this, PycomPackage.BOARD__BOARD_MEMBERS);
    }
    return boardMembers;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case PycomPackage.BOARD__BOARD_MEMBERS:
        return ((InternalEList<?>)getBoardMembers()).basicRemove(otherEnd, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case PycomPackage.BOARD__NAME:
        return getName();
      case PycomPackage.BOARD__BOARD_TYPE:
        return getBoardType();
      case PycomPackage.BOARD__COMMUNICATION_RATE:
        return getCommunicationRate();
      case PycomPackage.BOARD__LIBRARY:
        return getLibrary();
      case PycomPackage.BOARD__BOARD_MEMBERS:
        return getBoardMembers();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case PycomPackage.BOARD__NAME:
        setName((String)newValue);
        return;
      case PycomPackage.BOARD__BOARD_TYPE:
        setBoardType((String)newValue);
        return;
      case PycomPackage.BOARD__COMMUNICATION_RATE:
        setCommunicationRate((Integer)newValue);
        return;
      case PycomPackage.BOARD__LIBRARY:
        getLibrary().clear();
        getLibrary().addAll((Collection<? extends Library>)newValue);
        return;
      case PycomPackage.BOARD__BOARD_MEMBERS:
        getBoardMembers().clear();
        getBoardMembers().addAll((Collection<? extends BoardMember>)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case PycomPackage.BOARD__NAME:
        setName(NAME_EDEFAULT);
        return;
      case PycomPackage.BOARD__BOARD_TYPE:
        setBoardType(BOARD_TYPE_EDEFAULT);
        return;
      case PycomPackage.BOARD__COMMUNICATION_RATE:
        setCommunicationRate(COMMUNICATION_RATE_EDEFAULT);
        return;
      case PycomPackage.BOARD__LIBRARY:
        getLibrary().clear();
        return;
      case PycomPackage.BOARD__BOARD_MEMBERS:
        getBoardMembers().clear();
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case PycomPackage.BOARD__NAME:
        return NAME_EDEFAULT == null ? name != null : !NAME_EDEFAULT.equals(name);
      case PycomPackage.BOARD__BOARD_TYPE:
        return BOARD_TYPE_EDEFAULT == null ? boardType != null : !BOARD_TYPE_EDEFAULT.equals(boardType);
      case PycomPackage.BOARD__COMMUNICATION_RATE:
        return communicationRate != COMMUNICATION_RATE_EDEFAULT;
      case PycomPackage.BOARD__LIBRARY:
        return library != null && !library.isEmpty();
      case PycomPackage.BOARD__BOARD_MEMBERS:
        return boardMembers != null && !boardMembers.isEmpty();
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (name: ");
    result.append(name);
    result.append(", boardType: ");
    result.append(boardType);
    result.append(", communicationRate: ");
    result.append(communicationRate);
    result.append(')');
    return result.toString();
  }

} //BoardImpl
