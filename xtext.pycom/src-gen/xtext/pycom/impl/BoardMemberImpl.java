/**
 * generated by Xtext 2.16.0
 */
package xtext.pycom.impl;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import xtext.pycom.BoardMember;
import xtext.pycom.PycomPackage;
import xtext.pycom.Sensor;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Board Member</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link xtext.pycom.impl.BoardMemberImpl#getBoardMember <em>Board Member</em>}</li>
 * </ul>
 *
 * @generated
 */
public class BoardMemberImpl extends MinimalEObjectImpl.Container implements BoardMember
{
  /**
   * The cached value of the '{@link #getBoardMember() <em>Board Member</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getBoardMember()
   * @generated
   * @ordered
   */
  protected Sensor boardMember;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected BoardMemberImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return PycomPackage.Literals.BOARD_MEMBER;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Sensor getBoardMember()
  {
    return boardMember;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetBoardMember(Sensor newBoardMember, NotificationChain msgs)
  {
    Sensor oldBoardMember = boardMember;
    boardMember = newBoardMember;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, PycomPackage.BOARD_MEMBER__BOARD_MEMBER, oldBoardMember, newBoardMember);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setBoardMember(Sensor newBoardMember)
  {
    if (newBoardMember != boardMember)
    {
      NotificationChain msgs = null;
      if (boardMember != null)
        msgs = ((InternalEObject)boardMember).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - PycomPackage.BOARD_MEMBER__BOARD_MEMBER, null, msgs);
      if (newBoardMember != null)
        msgs = ((InternalEObject)newBoardMember).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - PycomPackage.BOARD_MEMBER__BOARD_MEMBER, null, msgs);
      msgs = basicSetBoardMember(newBoardMember, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, PycomPackage.BOARD_MEMBER__BOARD_MEMBER, newBoardMember, newBoardMember));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case PycomPackage.BOARD_MEMBER__BOARD_MEMBER:
        return basicSetBoardMember(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case PycomPackage.BOARD_MEMBER__BOARD_MEMBER:
        return getBoardMember();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case PycomPackage.BOARD_MEMBER__BOARD_MEMBER:
        setBoardMember((Sensor)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case PycomPackage.BOARD_MEMBER__BOARD_MEMBER:
        setBoardMember((Sensor)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case PycomPackage.BOARD_MEMBER__BOARD_MEMBER:
        return boardMember != null;
    }
    return super.eIsSet(featureID);
  }

} //BoardMemberImpl
